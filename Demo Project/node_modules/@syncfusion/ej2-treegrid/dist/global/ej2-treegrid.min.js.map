{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/selection.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || !records.hasChildRecords) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var i;\n    var j;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    if (action === 'add') {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && (control.editSettings.mode !== 'Cell'\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex + 1];\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = addRowRecord;\n            }\n            else {\n                value = currentViewRecords[addRowIndex];\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && action === 'add' && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        record.hasChildRecords = false;\n        if (action === 'add') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (!record.hasOwnProperty('childRecords')) {\n                record.childRecords = [];\n            }\n            else {\n                if (!isNullOrUndefined(child)) {\n                    record.childRecords.push(child);\n                }\n            }\n            if (record.childRecords.indexOf(childRecords) === -1) {\n                record.childRecords.unshift(childRecords);\n            }\n            if (isSelfReference) {\n                if (!record.hasOwnProperty(control.childMapping)) {\n                    record[control.childMapping] = [];\n                }\n                if (record[control.childMapping].indexOf(childRecords) === -1) {\n                    record[control.childMapping].unshift(childRecords);\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        control.renderModule.cellRender({\n            data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n            column: control.grid.getColumns()[control.treeColumnIndex]\n        });\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(+target.closest('tr').getAttribute('aria-rowindex'));\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            this.headerSelection();\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n        }\n        else {\n            var spanEle = checkWrap.querySelector('.e-label');\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            container.cell.appendChild(checkWrap);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (childRecords[count].hasChildRecords) {\n                    this.traverSelection(childRecords[count], checkboxState, true);\n                }\n                else {\n                    this.updateSelectedItems(childRecords[count], checkboxState);\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (checkBoxRecord.checkboxState === 'indeterminate') {\n                    indeter++;\n                }\n                else if (checkBoxRecord.checkboxState === 'check') {\n                    checkChildRecords++;\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (this.parent.autoCheckHierarchy) {\n            if ((requestType === 'sorting' || requestType === 'paging')) {\n                childData = this.parent.getCurrentViewRecords();\n                childLength = childData.length;\n                this.selectedIndexes = [];\n                for (var i = 0; i < childLength; i++) {\n                    this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                }\n            }\n            else if (requestType === 'delete' || args.action === 'add') {\n                var updatedData = [];\n                if (requestType === 'delete') {\n                    updatedData = args.data;\n                }\n                else {\n                    updatedData.push(args.data);\n                }\n                for (var i = 0; i < updatedData.length; i++) {\n                    if (requestType === 'delete') {\n                        var index = this.parent.flatData.indexOf(updatedData[i]);\n                        var checkedIndex = this.selectedIndexes.indexOf(index);\n                        this.selectedIndexes.splice(checkedIndex, 1);\n                        this.updateSelectedItems(updatedData[i], 'uncheck');\n                    }\n                    if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                        this.updateParentSelection(updatedData[i].parentItem);\n                    }\n                }\n            }\n            else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                args.data.checkboxState = 'uncheck';\n            }\n            else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh') {\n                this.selectedItems = [];\n                this.selectedIndexes = [];\n                childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                    this.parent.getCurrentViewRecords() : this.parent.flatData;\n                childData.forEach(function (record) {\n                    if (record.hasChildRecords) {\n                        _this.updateParentSelection(record);\n                    }\n                    else {\n                        _this.updateSelectedItems(record, record.checkboxState);\n                    }\n                });\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        addClass([args.row], 'e-gridrowindex' + index + 'level' + args.data.level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && isNullOrUndefined(args.cell.querySelector('.e-treecell'))) {\n            var container = createElement('div', {\n                className: 'e-treecolumn-container'\n            });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', {\n                    className: 'e-icons'\n                });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', {\n                className: 'e-treecell'\n            });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    if (this.parent.initialRender) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor')) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.hierarchyData = [];\n            this.taskIds = [];\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n            if (this.isSelfReference) {\n                var selfData = [];\n                var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                    .group(this.parent.parentIdMapping));\n                for (var i = 0; i < mappingData.length; i++) {\n                    var groupData = mappingData[i];\n                    var index = this.taskIds.indexOf(groupData.key);\n                    if (!isNullOrUndefined(groupData.key)) {\n                        if (index > -1) {\n                            var childData = (groupData.items);\n                            this.hierarchyData[index][this.parent.childMapping] = childData;\n                            continue;\n                        }\n                    }\n                    selfData.push.apply(selfData, groupData.items);\n                }\n                this.hierarchyData = this.selfReferenceUpdate(selfData);\n            }\n            if (!Object.keys(this.hierarchyData).length) {\n                this.parent.flatData = (!(this.parent.dataSource instanceof DataManager) ? this.parent.dataSource : []);\n            }\n            else {\n                this.createRecords(this.hierarchyData);\n            }\n            this.storedIndex = -1;\n        }\n        // else if (data instanceof DataManager && this.parent.isLocalData) {\n        //   this.convertToFlatData(data.dataSource.json);\n        // }\n        //this.crudActions();\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor') && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)\n                        && (isNullOrUndefined(records[rec].index))) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        records[rec].hasChildRecords = true;\n                    }\n                }\n            }\n            else {\n                this.convertToFlatData(records);\n            }\n        }\n        args.result = this.parent.dataSource[adaptorName] === 'BlazorAdaptor' || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails) {\n        var _this = this;\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        if (rowDetails.rows.length > 0) {\n            rowDetails.record.expanded = true;\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if ((isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || !this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    if (!isNullOrUndefined(targetEle)) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    var childRows = gridRows.filter(function (r) {\n                        return r.classList.contains('e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow });\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            var dm = this.parent.dataSource;\n            var qry = this.parent.grid.getDataModule().generateQuery();\n            var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n            qry.queries = clonequries;\n            qry.isCountRequired = true;\n            qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n            showSpinner(this.parent.element);\n            dm.executeQuery(qry).then(function (e) {\n                var datas = _this.parent.grid.currentViewData;\n                var inx = datas.indexOf(rowDetails.record);\n                var haveChild = getObject('actual.nextLevel', e);\n                var result = e.result;\n                rowDetails.record.childRecords = result;\n                for (var r = 0; r < result.length; r++) {\n                    result[r].taskData = extend({}, result[r]);\n                    result[r].level = rowDetails.record.level + 1;\n                    result[r].index = Math.ceil(Math.random() * 1000);\n                    var parentData = extend({}, rowDetails.record);\n                    delete parentData.childRecords;\n                    result[r].parentItem = parentData;\n                    result[r].parentUniqueID = rowDetails.record.uniqueID;\n                    result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                    setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                    // delete result[r].parentItem.childRecords;\n                    if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                        && !(haveChild && !haveChild[r])) {\n                        result[r].hasChildRecords = true;\n                        result[r].expanded = false;\n                    }\n                    datas.splice(inx + r + 1, 0, result[r]);\n                }\n                setValue('result', datas, e);\n                setValue('action', 'beforecontentrender', e);\n                _this.parent.trigger(events.actionComplete, e);\n                hideSpinner(_this.parent.element);\n                e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e);\n                _this.parent.trigger(events.expanded, args);\n            });\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            currentData.index = this.storedIndex;\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            currentData.level = level;\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType.toString();\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (action === 'add') {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                if ((requestType === 'delete' || requestType === 'save')) {\n                    this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n                }\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            //this.parent.filterModule.updatedFilteredRecord(filteredData);\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     *\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./api-searchSettings.html).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./api-treegrid.html#printmode-string).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        return modules;\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        EventHandler.remove(this.element, 'click', this.mouseClickHandler);\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            if (isBlazor()) {\n                var data = 'data';\n                var rowIndex = 'rowIndex';\n                var row = 'row';\n                args[data] = args[data][args[data].length - 1];\n                args[rowIndex] = args[rowIndex][args[rowIndex].length - 1];\n                args[row] = args[row][args[row].length - 1];\n            }\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.cellEdit = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.extendedGridEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor()) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        // this.grid.cellSaved = (args: CellSaveArgs): void => {\n        //   this.trigger(events.cellSaved, args);\n        //   this.notify(events.cellSaved, args);\n        // };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        // this.grid.batchAdd = (args: BatchAddArgs): void => {\n        //   this.trigger(events.batchAdd, args);\n        //   this.notify(events.batchAdd, args);\n        // }\n        // this.grid.beforeBatchSave = (args: BeforeBatchSaveArgs): void => {\n        //   this.trigger(events.beforeBatchSave, args);\n        //   this.notify(events.beforeBatchSave, args);\n        // }\n        // this.grid.beforeBatchAdd = (args: BeforeBatchAddArgs): void => {\n        //   this.trigger(events.beforeBatchAdd, args);\n        //   this.notify(events.beforeBatchAdd, args);\n        // }\n        // this.grid.batchDelete = (args: BatchDeleteArgs): void => {\n        //   this.trigger(events.batchDelete, args);\n        //   this.notify(events.batchDelete, args);\n        // }\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor()) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'delete') {\n                    var data = 'data';\n                    actionArgs[data] = _this.getSelectedRecords();\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit') {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete') {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: 'AddRow', target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: 'Above', id: 'Above' }, { text: 'Below', id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        this.grid.destroy();\n        this.dataModule.destroy();\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var _this = this;\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        keyEntity.forEach(function (value) {\n            var currentObject = _this[value];\n            for (var _i = 0, _a = ignoreOnPersist[value]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        });\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        var _this = this;\n        columns.forEach(function (column) {\n            if (column.columns) {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n                _this.ignoreInArrays(ignoreOnColumn, column.columns);\n            }\n            else {\n                _this.ignoreInColumn(ignoreOnColumn, column);\n            }\n        });\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        ignoreOnColumn.forEach(function (val) {\n            delete column[val];\n            column.filter = {};\n        });\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if (target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) {\n            this.expandCollapseRequest(target);\n        }\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        this.editModule.addRecord(data, index, position);\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        this.grid.editModule.closeEdit();\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        this.grid.editModule.deleteRecord(fieldName, data);\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function () {\n        this.grid.editModule.startEdit();\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        this.editModule.editCell(rowIndex, field);\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        this.grid.editModule.endEdit();\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        this.grid.editModule.deleteRow(tr);\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        this.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.columnModel, function (item, index) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        return this.grid.showColumns(keys, showBy);\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        return this.grid.hideColumns(keys, hideBy);\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        this.columnModel = [];\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel \n        this.setProperties({ columns: this.columnModel }, true);\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                _this.trigger(events.collapsed, collapseArgs);\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild(rows);\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows > 0) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.classList.contains('e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rows) {\n        var rData;\n        for (var i = 0; i < rows.length; i++) {\n            if (this.rowTemplate) {\n                rData = this.grid.getCurrentViewRecords()[rows[i].rowIndex];\n            }\n            else {\n                rData = this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            }\n            rData.expanded = false;\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                removeClass([expandElement], 'e-treegridexpand');\n                addClass([expandElement], 'e-treegridcollapse');\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                this.collapseRemoteChild(cRow);\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var treeColumn = this.parent.columns[this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            this.dropRows(args, isByMethod);\n            //this.refreshGridDataSource();\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (!this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    this.dropRows(args);\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)) {\n            var srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                if (idx !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idx, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            if (idx !== -1) {\n                this.treeData.splice(idx, 1);\n                this.treeGridData.splice(idx, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n            notifyArgs.requestType = 'refresh';\n        }\n        var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n        for (var r = 0; r < rows.length; r++) {\n            rows[r].index = (this.visualData).indexOf(rows[r].data);\n        }\n        return rows;\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'virtualscroll', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (clear) {\n            this.cache = {};\n            this.data = {};\n            this.groups = {};\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level >\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n            }\n            else {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level ===\n                tObj.getCurrentViewRecords()[args.rowIndex - 1].level) {\n                this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level === 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n            }\n            if (tObj.getCurrentViewRecords()[args.rowIndex].level !== 0) {\n                this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n            }\n        }\n        if (args.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            var _loop_1 = function (summaryRowIndex, len_1) {\n                var item = void 0;\n                item = {};\n                for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                    var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                        this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                    item[field] = null;\n                }\n                if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                    item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                    var idx_1;\n                    flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                        idx_1 = i;\n                        return;\n                    } });\n                    var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                    var summaryParent = extend({}, parentRecord);\n                    delete summaryParent.childRecords;\n                    delete summaryParent[this_1.parent.childMapping];\n                    setValue('parentItem', summaryParent, item);\n                    var level = getObject('level', summaryParent);\n                    setValue('level', level + 1, item);\n                    var index = getObject('index', summaryParent);\n                    setValue('isSummaryRow', true, item);\n                    setValue('parentUniqueID', summaryParent.uniqueID, item);\n                    if (isSort) {\n                        var childRecords = getObject('childRecords', parentRecord);\n                        childRecords.push(item);\n                    }\n                    flatRecords.splice(currentIndex, 0, item);\n                }\n                else {\n                    return \"continue\";\n                }\n            };\n            var this_1 = this;\n            for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                _loop_1(summaryRowIndex, len_1);\n            }\n            this.flatChildRecords = [];\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var _this = this;\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        types.forEach(function (type) {\n            summaryKey = type;\n            var key = summaryColumn.field + ' - ' + type.toLowerCase();\n            var val = type !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(type, sumData, summaryColumn, _this.parent);\n            var disp = summaryColumn.columnName;\n            var value = type !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value;\n            single[disp][type] = !isNullOrUndefined(val) ? formatFn(value) : ' ';\n        });\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if (this.parent.editSettings.mode === 'Cell' && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        // this.batchDeleted = {};\n        // this.batchRecords = [];\n        // this.isAdd = false;\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('click', this.gridSingleClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        // this.parent.on(events.cellSaved, this.cellSaved, this);\n        // this.parent.on(events.batchDelete, this.batchDelete, this);\n        // this.parent.on(events.batchAdd, this.batchAdd, this);\n        // this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        // this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        // this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        //this.parent.grid.on(events.batchEditFormRendered, this.batchEditFormRendered, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.gridSingleClick = function (e) {\n        var targetElement = e.target;\n        if (targetElement && this.parent.grid.isEdit && (targetElement.classList.contains('e-treegridexpand') ||\n            targetElement.classList.contains('e-treegridcollapse'))) {\n            this.parent.grid.closeEdit();\n            return;\n        }\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        this.parent.trigger(events.actionComplete, args);\n    };\n    /*private batchEditFormRendered(args: Object):void {\n      this.parent.trigger(events.actionComplete, args);\n    }*/\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.cellSave, this.cellSave);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('click', this.gridSingleClick);\n        //this.parent.grid.off(events.batchEditFormRendered, this.batchEditFormRendered);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) && treeObj.getSelectedRowIndexes().length &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) ? treeObj.getSelectedRowIndexes()[0] :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]];\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex],\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        // this.batchRecords = [];\n        // let keys: string[] = Object.keys(this.batchDeleted);\n        // let primaryLey: string = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        // let currentViewRecords: ITreeData[] = this.parent.grid.getCurrentViewRecords();\n        // for (let i: number = 0; i < keys.length; i++) {\n        //   let index: number;\n        //   currentViewRecords.map((e: ITreeData, j: number) => {\n        //     if (this.batchDeleted.hasOwnProperty(keys[i]) && e[primaryLey] === this.batchDeleted[keys[i]][primaryLey]) {\n        //       index = j; return;\n        //     }\n        //   });\n        //   this.parent.renderModule.cellRender({\n        //     data: currentViewRecords[index],\n        //     cell: (<HTMLTableRowElement>this.parent.getRowByIndex(index)).cells[this.parent.treeColumnIndex],\n        //     column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n        //   });\n        // }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            setValue('isEdit', false, this.parent.grid);\n            args.rowData[args.columnName] = args.value;\n            var row = args.cell.parentNode;\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = this.parent.getDataRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].parentItem = this.internalProperties.parentItem;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            for (var l = 0; l < row.classList.length; l++) {\n                var value = row.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([row], value);\n                }\n                if (results != null) {\n                    removeClass([row], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([row], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([row], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        var rows = this.parent.grid.getDataRows();\n        var movableRows;\n        if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n            movableRows = this.parent.getMovableDataRows();\n        }\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Child' && !(records[index].expanded) &&\n                records[index][this.parent.childMapping] && records[index][this.parent.childMapping].length) {\n                this.parent.expandRow(rows[index + 1], records[index]);\n            }\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && this.selectedIndex > -1) {\n                position = 'after';\n                // let records: Object[] = this.batchRecords.length ? this.batchRecords : this.parent.grid.getCurrentViewRecords();\n                index += findChildrenRecords(records[index]).length;\n            }\n            if (this.selectedIndex > -1 && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                    movableRows[index + 1][position](movableRows[0]);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = void 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            if (currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if (this.selectedIndex > -1) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    value.level = level + 1;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if (this.selectedIndex > -1 && level) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && this.selectedIndex > -1) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save')) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = true;\n            this.updateGridEditMode('Batch');\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var gridClas = [].slice.call(args.detailElement.parentElement.previousSibling.classList).filter(function (gridclass) { return (gridclass !== 'e-row' && gridclass !== 'e-altrow'); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\n/**\n * Content renderer for TreeGrid\n */\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        this.parent[action]('data-ready', this.onDataReady, this);\n        //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n        var fn = function () {\n            _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n            _this.parent.off('content-ready', fn);\n        };\n        this.parent.on('content-ready', fn, this);\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!isNullOrUndefined(e.count)) {\n            this.totalRecords = e.count;\n            getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        }\n        if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n            this.contents.scrollTop = 0;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        getValue('observer', this).options.debounceEvent = false;\n        this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n        this.contents = this.getPanel().firstChild;\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            this.translateY = scrollArgs.offset.top;\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' && getValue('currentInfo', this).page &&\n            getValue('currentInfo', this).page !== e.virtualInfo.page ? getValue('currentInfo', this) : e.virtualInfo;\n        var cBlock = (info.columnIndexes[0]) - 1;\n        var cOffset = this.getColumnOffset(cBlock);\n        //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n        target = this.parent.createElement('tbody');\n        target.appendChild(newChild);\n        var replace = 'replaceWith';\n        this.getTable().querySelector('tbody')[replace](target);\n        if (!this.isExpandCollapse || this.translateY === 0) {\n            getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n        }\n        else {\n            this.isExpandCollapse = false;\n        }\n        setValue('prevInfo', info, this);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1 };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.classList.contains('e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].classList.contains('e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","columns","length","findParentRecords","records","datas","i","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","getCurrentViewRecords","addAct","addAction","Array","extend","editSettings","newRowPosition","k","taskData","hasOwnProperty","mode","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","unshift","isChildAll","editedData","child","index_1","currentRecords","map","sortSettings","parentUniqueID","indexOf","primaryKeys","data","setRowData","row","getRowByIndex","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","Column","options","this","allowEditing","edit","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","Selection","selectedItems","selectedIndexes","addEventListener","getModuleName","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","destroy","args","checkBox","checkWrap","parentsUntil","querySelectorAll","querySelector","rowIndex","closest","getAttribute","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","classList","contains","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","trigger","getCheckboxcolumnIndex","mappingUid","columnIndex","col","showCheckbox","uid","headerCelllength","getHeaderContent","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","_this","indeter","checkChildRecords","this_1","childRecord","currentRecord","checkBoxRecord","checkAll","checkedRecord","recordIndex","checkboxRecord","tr","getRows","movableTr","getMovableDataRows","isSummaryRow","checkedIndex","checkBoxclass","childData","childLength","requestType","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","rec","getValue","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","collapsed","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","where","addParams","hasChildMapping","qry","clone","queries","select","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","shift","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","gridRows","rows","getContentTable","slice","call","parentRow","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","expandingTd","detailRowModule","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","totalRecordsCount","parentRecords","treeGridData","currentData","dataStateChange","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","toString","isLocalData","results","gridQuery","filterQuery","searchQuery","fltrQuery","q","srchQuery","filteredData","aggregates","aggregateQuery","summaryQuery","summaryModule","calculateSummaryValue","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","enableVirtualization","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","locale","L10n","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","expandCollapseRequest","expandrow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","nextSibling","previousSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","rowHeight","gridLines","getGridToolbar","toolbarTemplate","selectionSettings","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","treeGrid","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","printComplete","cellEdit","actionFailure","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","extendedGridEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","toolbarClick","callBackPromise","toolbarargs","cancel","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","getElement","promise","batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","detailDataBound","actionBegin","getSelectedRecords","actionComplete","updateTreeGridModel","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","l10n","Search","tooltipText","getConstant","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","refresh","isEdit","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","val","touches","getPager","addRecord","position","editModule","deleteRecord","fieldName","startEdit","editCell","endEdit","deleteRow","setCellValue","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","getVisibleColumns","cols","visible","selectionModule","indexes","refreshUI","refreshHeader","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isChild","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","rData","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowIndexes","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","dropPosition","dropIndex","dropRows","draggedRecord","dragRecords","draggedRecord_1","tObj","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","toolbarModule","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","window","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","targetIndex","isNaN","getTargetIdx","srcControl","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","notifyArgs","checkAndResetCache","clear","cache","groups","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","isCsv","Promise","reject","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","currentPage","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","enableItems","saveCell","isEnable","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","a","tempObj","requiresCount","summaryKey","sumData","toLowerCase","calculateAggregate","disp","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","Edit","GridEdit","previousNewRowPosition","internalProperties","crudAction","beginAdd","keyPressed","contentready","editActionEvents","gridDblClick","gridSingleClick","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","doubleClickTarget","targetElement","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","params","getColumnByIndex","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","deleteUniqueID","prom","celleditArgs","enableToolbarItems","request","toolbarID","cellDetails","selectRowIndex","rowIndex_1","primaryKeys_1","updateCell","aggregateModule","formObj","saveArgs","previousData","previousValue","updateRow","updateIndex","data1","data2","l","match","focussedElement","activeElement","errors","focus","childs","beginAddEdit","childRecordCount","currentDataIndex","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","gridClas","detailElement","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","contentModule","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","startIndex","endIndex","getModelGenerator","virtualOtherAction","indexModifier","setTop","eventListener","onDataReady","observers","observes","scrollArgs","scrollListeners","totalRecords","setVirtualHeight","getRowHeight","contents","renderTable","debounceEvent","TreeInterSectionObserver","getPanel","info","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","nextSetResIndex","lastIndex","viewInfo","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","page","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","queryselector","freezeModule","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze"],"mappings":"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,IACrCE,GACI+rB,aAAY9X,IACbG,EAAStU,UAAW,mBAAgB,IACvCE,GACIc,YAAS,IACVsT,EAAStU,UAAW,qBAAkB,IACzCE,GACIc,cACDsT,EAAStU,UAAW,qBAAkB,IACzCE,GACI+rB,aAAY/qB,IACboT,EAAStU,UAAW,qBAAkB,IACzCE,GACI+rB,aAAYvjB,IACb4L,EAAStU,UAAW,qBAAkB,IACzCE,GACIc,cACDsT,EAAStU,UAAW,cAAW,IAClCE,GACIc,cACDsT,EAAStU,UAAW,sBAAmB,IAC1CE,GACIc,WAAS,YACVsT,EAAStU,UAAW,gBAAa,IACpCE,GACIc,cACDsT,EAAStU,UAAW,uBAAoB,IAC3CE,GACIc,cACDsT,EAAStU,UAAW,sBAAmB,IAC1CE,GACIc,cACDsT,EAAStU,UAAW,kBAAe,IACtCE,GACIc,WAAS,OACVsT,EAAStU,UAAW,gBAAa,IACpCE,GACIc,YAAS,IACVsT,EAAStU,UAAW,mBAAgB,IACvCE,GACIc,YAAS,IACVsT,EAAStU,UAAW,oBAAiB,IACxCE,GACIc,YAAS,IACVsT,EAAStU,UAAW,kBAAe,IACtCE,GACIc,WAAS,SACVsT,EAAStU,UAAW,aAAU,IACjCE,GACIc,WAAS,SACVsT,EAAStU,UAAW,YAAS,IAChCE,GACIc,YAAS,IACVsT,EAAStU,UAAW,2BAAwB,IAC/CE,GACIc,WAAS,QACVsT,EAAStU,UAAW,sBAAmB,IAC1CE,GACIisB,WACD7X,EAAStU,UAAW,cAAW,IAClCE,GACIisB,WACD7X,EAAStU,UAAW,WAAQ,IAC/BE,GACIisB,WACD7X,EAAStU,UAAW,gBAAa,IACpCE,GACIisB,WACD7X,EAAStU,UAAW,eAAY,IACnCE,GACIisB,WACD7X,EAAStU,UAAW,iBAAc,IACrCE,GACIisB,WACD7X,EAAStU,UAAW,gBAAa,IACpCE,GACIisB,WACD7X,EAAStU,UAAW,eAAY,IACnCE,GACIisB,WACD7X,EAAStU,UAAW,kBAAe,IACtCE,GACIisB,WACD7X,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,gBAAa,IACpCE,GACIisB,WACD7X,EAAStU,UAAW,eAAY,IACnCE,GACIisB,WACD7X,EAAStU,UAAW,oBAAiB,IACxCE,GACIisB,WACD7X,EAAStU,UAAW,gBAAa,IACpCE,GACIisB,WACD7X,EAAStU,UAAW,wBAAqB,IAC5CE,GACIisB,WACD7X,EAAStU,UAAW,sBAAmB,IAC1CE,GACIisB,WACD7X,EAAStU,UAAW,wBAAqB,IAC5CE,GACIisB,WACD7X,EAAStU,UAAW,mBAAgB,IACvCE,GACIisB,WACD7X,EAAStU,UAAW,sBAAmB,IAC1CE,GACIisB,WACD7X,EAAStU,UAAW,oBAAiB,IACxCE,GACIc,YAAS,IACVsT,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,mBAAgB,IACvCE,GACIisB,WACD7X,EAAStU,UAAW,kBAAe,IACtCE,GACIisB,WACD7X,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,oBAAiB,IACxCE,GACIisB,WACD7X,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,oBAAiB,IACxCE,GACIisB,WACD7X,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,sBAAmB,IAC1CE,GACIisB,WACD7X,EAAStU,UAAW,mBAAgB,IACvCE,GACIisB,WACD7X,EAAStU,UAAW,sBAAmB,IAC1CE,GACIisB,WACD7X,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,kBAAe,IACtCE,GACIisB,WACD7X,EAAStU,UAAW,eAAY,IACnCE,GACIisB,WACD7X,EAAStU,UAAW,iBAAc,IACrCE,GACIisB,WACD7X,EAAStU,UAAW,sBAAmB,IAC1CE,GACIisB,WACD7X,EAAStU,UAAW,iBAAc,IACrCE,GACIisB,WACD7X,EAAStU,UAAW,iBAAc,IACrCE,GACIisB,WACD7X,EAAStU,UAAW,qBAAkB,IACzCE,GACIisB,WACD7X,EAAStU,UAAW,oBAAiB,IACxCE,GACI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"}